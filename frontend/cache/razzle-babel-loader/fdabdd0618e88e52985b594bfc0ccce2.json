{"ast":null,"code":"var _jsxFileName = \"/Users/daniilkrokhmal/Desktop/Develop/KEKRENT/frontend/src/client.tsx\";\nvar __jsx = React.createElement;\n// import { createInspector } from 'effector-inspector';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Application } from \"./application\"; // import { LOGGER_DOMAIN_NAME } from 'effector-logger/attach';\n// createInspector({ trimDomain: LOGGER_DOMAIN_NAME });\n\nReactDOM.hydrate(__jsx(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }\n}, __jsx(Application, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n})), document.querySelector(\"#root\"));\n\nif (module.hot) {\n  module.hot.accept();\n}","map":{"version":3,"sources":["/Users/daniilkrokhmal/Desktop/Develop/KEKRENT/frontend/src/client.tsx"],"names":["React","ReactDOM","BrowserRouter","Application","hydrate","document","querySelector","module","hot","accept"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAIA,SAASC,WAAT,QAA4B,eAA5B,C,CAEA;AACA;;AAEAF,QAAQ,CAACG,OAAT,CACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAJF;;AAOA,IAAIC,MAAM,CAACC,GAAX,EAAgB;AACdD,EAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX;AACD","sourcesContent":["// import { createInspector } from 'effector-inspector';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { hydrate } from \"effector/fork\";\n\nimport { root } from \"effector-root\";\nimport { Application } from \"./application\";\n\n// import { LOGGER_DOMAIN_NAME } from 'effector-logger/attach';\n// createInspector({ trimDomain: LOGGER_DOMAIN_NAME });\n\nReactDOM.hydrate(\n  <BrowserRouter>\n    <Application />\n  </BrowserRouter>,\n  document.querySelector(\"#root\")\n);\n\nif (module.hot) {\n  module.hot.accept();\n}\n"]},"metadata":{},"sourceType":"module"}