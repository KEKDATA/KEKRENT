{"ast":null,"code":"import { createEffect, createEvent, createStore, guard, attach, restore } from \"effector-root\";\nimport { getPostsApi } from \"../../api/posts\";\nimport { PostsContract } from \"../../contracts/posts\";\nconst getPostsFx = createEffect(getPostsApi);\nexport const postsReceived = guard(getPostsFx.doneData.map(data => data), {\n  filter: PostsContract.guard\n});\nexport const $posts = createStore([]).on(postsReceived, (_, posts) => posts);\nexport const numberOfPostsChanged = createEvent();\nexport const $numberOfPosts = restore(numberOfPostsChanged, 1);\nexport const groupsIdsSelected = createEvent();\nexport const $groupsIds = restore(groupsIdsSelected, []);\nexport const getPosts = attach({\n  effect: getPostsFx,\n  source: {\n    numberOfPosts: $numberOfPosts,\n    groupsIds: $groupsIds\n  },\n  mapParams: (_, source) => source\n});","map":{"version":3,"sources":["/Users/daniilkrokhmal/Desktop/Develop/KEKRENT/frontend/src/features/posts/model.ts"],"names":["createEffect","createEvent","createStore","guard","attach","restore","getPostsApi","PostsContract","getPostsFx","postsReceived","doneData","map","data","filter","$posts","on","_","posts","numberOfPostsChanged","$numberOfPosts","groupsIdsSelected","$groupsIds","getPosts","effect","source","numberOfPosts","groupsIds","mapParams"],"mappings":"AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,OANF,QAOO,eAPP;AAQA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,aAAT,QAA0C,uBAA1C;AAEA,MAAMC,UAAU,GAAGR,YAAY,CAM7BM,WAN6B,CAA/B;AAQA,OAAO,MAAMG,aAAa,GAAGN,KAAK,CAChCK,UAAU,CAACE,QAAX,CAAoBC,GAApB,CAAyBC,IAAD,IAAUA,IAAlC,CADgC,EAEhC;AACEC,EAAAA,MAAM,EAAEN,aAAa,CAACJ;AADxB,CAFgC,CAA3B;AAOP,OAAO,MAAMW,MAAM,GAAGZ,WAAW,CAAa,EAAb,CAAX,CAA4Ba,EAA5B,CACpBN,aADoB,EAEpB,CAACO,CAAD,EAAIC,KAAJ,KAAcA,KAFM,CAAf;AAKP,OAAO,MAAMC,oBAAoB,GAAGjB,WAAW,EAAxC;AACP,OAAO,MAAMkB,cAAc,GAAGd,OAAO,CAACa,oBAAD,EAAuB,CAAvB,CAA9B;AAEP,OAAO,MAAME,iBAAiB,GAAGnB,WAAW,EAArC;AACP,OAAO,MAAMoB,UAAU,GAAGhB,OAAO,CAACe,iBAAD,EAAoB,EAApB,CAA1B;AAEP,OAAO,MAAME,QAAQ,GAAGlB,MAAM,CAAC;AAC7BmB,EAAAA,MAAM,EAAEf,UADqB;AAE7BgB,EAAAA,MAAM,EAAE;AAAEC,IAAAA,aAAa,EAAEN,cAAjB;AAAiCO,IAAAA,SAAS,EAAEL;AAA5C,GAFqB;AAG7BM,EAAAA,SAAS,EAAE,CAACX,CAAD,EAAIQ,MAAJ,KAAeA;AAHG,CAAD,CAAvB","sourcesContent":["import {\n  createEffect,\n  createEvent,\n  createStore,\n  guard,\n  attach,\n  restore,\n} from \"effector-root\";\nimport { getPostsApi } from \"../../api/posts\";\nimport { PostsContract, PostsTypes } from \"../../contracts/posts\";\n\nconst getPostsFx = createEffect<\n  {\n    numberOfPosts: number;\n    groupsIds: Array<number>;\n  },\n  unknown\n>(getPostsApi);\n\nexport const postsReceived = guard<unknown, PostsTypes>(\n  getPostsFx.doneData.map((data) => data),\n  {\n    filter: PostsContract.guard,\n  }\n);\n\nexport const $posts = createStore<PostsTypes>([]).on(\n  postsReceived,\n  (_, posts) => posts\n);\n\nexport const numberOfPostsChanged = createEvent<number>();\nexport const $numberOfPosts = restore(numberOfPostsChanged, 1);\n\nexport const groupsIdsSelected = createEvent<Array<number>>();\nexport const $groupsIds = restore(groupsIdsSelected, []);\n\nexport const getPosts = attach({\n  effect: getPostsFx,\n  source: { numberOfPosts: $numberOfPosts, groupsIds: $groupsIds },\n  mapParams: (_, source) => source,\n});\n"]},"metadata":{},"sourceType":"module"}