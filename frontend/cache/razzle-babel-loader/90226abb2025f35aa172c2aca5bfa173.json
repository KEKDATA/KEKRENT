{"ast":null,"code":"import { createEffect, createEvent, createStore, guard, attach, restore } from \"effector-root\";\nimport { getPostsApi } from \"../../api/posts\";\nimport { PostsContract } from \"../../contracts/posts\";\nvar getPostsFx = createEffect(getPostsApi);\nexport var postsReceived = guard(getPostsFx.doneData.map(function (data) {\n  return data;\n}), {\n  filter: PostsContract.guard\n});\nexport var $posts = createStore([]).on(postsReceived, function (_, posts) {\n  return posts;\n});\nexport var numberOfPostsChanged = createEvent();\nexport var $numberOfPosts = restore(numberOfPostsChanged, 1);\nexport var groupsIdsSelected = createEvent();\nexport var $groupsIds = restore(groupsIdsSelected, []);\nexport var datesSelected = createEvent();\nexport var $dates = restore(datesSelected, []);\nexport var getPosts = attach({\n  effect: getPostsFx,\n  source: {\n    numberOfPosts: $numberOfPosts,\n    groupsIds: $groupsIds\n  },\n  mapParams: function mapParams(_, source) {\n    return source;\n  }\n});","map":{"version":3,"sources":["/Users/daniilkrokhmal/Desktop/Develop/KEKRENT/frontend/src/features/posts/model.ts"],"names":["createEffect","createEvent","createStore","guard","attach","restore","getPostsApi","PostsContract","getPostsFx","postsReceived","doneData","map","data","filter","$posts","on","_","posts","numberOfPostsChanged","$numberOfPosts","groupsIdsSelected","$groupsIds","datesSelected","$dates","getPosts","effect","source","numberOfPosts","groupsIds","mapParams"],"mappings":"AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,OANF,QAOO,eAPP;AAQA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,aAAT,QAA0C,uBAA1C;AAEA,IAAMC,UAAU,GAAGR,YAAY,CAM7BM,WAN6B,CAA/B;AAQA,OAAO,IAAMG,aAAa,GAAGN,KAAK,CAChCK,UAAU,CAACE,QAAX,CAAoBC,GAApB,CAAwB,UAACC,IAAD;AAAA,SAAUA,IAAV;AAAA,CAAxB,CADgC,EAEhC;AACEC,EAAAA,MAAM,EAAEN,aAAa,CAACJ;AADxB,CAFgC,CAA3B;AAOP,OAAO,IAAMW,MAAM,GAAGZ,WAAW,CAAa,EAAb,CAAX,CAA4Ba,EAA5B,CACpBN,aADoB,EAEpB,UAACO,CAAD,EAAIC,KAAJ;AAAA,SAAcA,KAAd;AAAA,CAFoB,CAAf;AAKP,OAAO,IAAMC,oBAAoB,GAAGjB,WAAW,EAAxC;AACP,OAAO,IAAMkB,cAAc,GAAGd,OAAO,CAACa,oBAAD,EAAuB,CAAvB,CAA9B;AAEP,OAAO,IAAME,iBAAiB,GAAGnB,WAAW,EAArC;AACP,OAAO,IAAMoB,UAAU,GAAGhB,OAAO,CAACe,iBAAD,EAAoB,EAApB,CAA1B;AAEP,OAAO,IAAME,aAAa,GAAGrB,WAAW,EAAjC;AACP,OAAO,IAAMsB,MAAM,GAAGlB,OAAO,CAACiB,aAAD,EAAgB,EAAhB,CAAtB;AAEP,OAAO,IAAME,QAAQ,GAAGpB,MAAM,CAAC;AAC7BqB,EAAAA,MAAM,EAAEjB,UADqB;AAE7BkB,EAAAA,MAAM,EAAE;AAAEC,IAAAA,aAAa,EAAER,cAAjB;AAAiCS,IAAAA,SAAS,EAAEP;AAA5C,GAFqB;AAG7BQ,EAAAA,SAAS,EAAE,mBAACb,CAAD,EAAIU,MAAJ;AAAA,WAAeA,MAAf;AAAA;AAHkB,CAAD,CAAvB","sourcesContent":["import {\n  createEffect,\n  createEvent,\n  createStore,\n  guard,\n  attach,\n  restore,\n} from \"effector-root\";\nimport { getPostsApi } from \"../../api/posts\";\nimport { PostsContract, PostsTypes } from \"../../contracts/posts\";\n\nconst getPostsFx = createEffect<\n  {\n    numberOfPosts: number;\n    groupsIds: Array<number>;\n  },\n  unknown\n>(getPostsApi);\n\nexport const postsReceived = guard<unknown, PostsTypes>(\n  getPostsFx.doneData.map((data) => data),\n  {\n    filter: PostsContract.guard,\n  }\n);\n\nexport const $posts = createStore<PostsTypes>([]).on(\n  postsReceived,\n  (_, posts) => posts\n);\n\nexport const numberOfPostsChanged = createEvent<number>();\nexport const $numberOfPosts = restore(numberOfPostsChanged, 1);\n\nexport const groupsIdsSelected = createEvent<Array<number>>();\nexport const $groupsIds = restore(groupsIdsSelected, []);\n\nexport const datesSelected = createEvent<Array<string>>();\nexport const $dates = restore(datesSelected, []);\n\nexport const getPosts = attach({\n  effect: getPostsFx,\n  source: { numberOfPosts: $numberOfPosts, groupsIds: $groupsIds },\n  mapParams: (_, source) => source,\n});\n"]},"metadata":{},"sourceType":"module"}